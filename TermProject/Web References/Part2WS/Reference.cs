//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace TermProject.Part2WS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Part2WSSoap", Namespace="http://tempuri.org/")]
    public partial class Part2WS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetAccountInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback uploadFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUploadHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateStorageUsedOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllAdminOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateStorageCapacityOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback resetPassordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllFileInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback activateOrDeactivateOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAdminLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback getForumOperationCompleted;
        
        private System.Threading.SendOrPostCallback addQuestionOperationCompleted;
        
        private System.Threading.SendOrPostCallback addAnswerOperationCompleted;
        
        private System.Threading.SendOrPostCallback updatePasswordOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Part2WS() {
            this.Url = global::TermProject.Properties.Settings.Default.TermProject_Part2WS_Part2WS;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetAccountInfoCompletedEventHandler GetAccountInfoCompleted;
        
        /// <remarks/>
        public event UpdateAccountCompletedEventHandler UpdateAccountCompleted;
        
        /// <remarks/>
        public event uploadFileCompletedEventHandler uploadFileCompleted;
        
        /// <remarks/>
        public event getFilesCompletedEventHandler getFilesCompleted;
        
        /// <remarks/>
        public event UpdateFileCompletedEventHandler UpdateFileCompleted;
        
        /// <remarks/>
        public event getUploadHistoryCompletedEventHandler getUploadHistoryCompleted;
        
        /// <remarks/>
        public event DeleteFileCompletedEventHandler DeleteFileCompleted;
        
        /// <remarks/>
        public event getFileCompletedEventHandler getFileCompleted;
        
        /// <remarks/>
        public event updateStorageUsedCompletedEventHandler updateStorageUsedCompleted;
        
        /// <remarks/>
        public event getAllAccountCompletedEventHandler getAllAccountCompleted;
        
        /// <remarks/>
        public event getAllAdminCompletedEventHandler getAllAdminCompleted;
        
        /// <remarks/>
        public event updateStorageCapacityCompletedEventHandler updateStorageCapacityCompleted;
        
        /// <remarks/>
        public event deleteAccountCompletedEventHandler deleteAccountCompleted;
        
        /// <remarks/>
        public event resetPassordCompletedEventHandler resetPassordCompleted;
        
        /// <remarks/>
        public event GetFileDataCompletedEventHandler GetFileDataCompleted;
        
        /// <remarks/>
        public event getAllFileInfoCompletedEventHandler getAllFileInfoCompleted;
        
        /// <remarks/>
        public event activateOrDeactivateCompletedEventHandler activateOrDeactivateCompleted;
        
        /// <remarks/>
        public event getAdminLogCompletedEventHandler getAdminLogCompleted;
        
        /// <remarks/>
        public event getForumCompletedEventHandler getForumCompleted;
        
        /// <remarks/>
        public event addQuestionCompletedEventHandler addQuestionCompleted;
        
        /// <remarks/>
        public event addAnswerCompletedEventHandler addAnswerCompleted;
        
        /// <remarks/>
        public event updatePasswordCompletedEventHandler updatePasswordCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Person GetAccountInfo(string email, int verification) {
            object[] results = this.Invoke("GetAccountInfo", new object[] {
                        email,
                        verification});
            return ((Person)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountInfoAsync(string email, int verification) {
            this.GetAccountInfoAsync(email, verification, null);
        }
        
        /// <remarks/>
        public void GetAccountInfoAsync(string email, int verification, object userState) {
            if ((this.GetAccountInfoOperationCompleted == null)) {
                this.GetAccountInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountInfoOperationCompleted);
            }
            this.InvokeAsync("GetAccountInfo", new object[] {
                        email,
                        verification}, this.GetAccountInfoOperationCompleted, userState);
        }
        
        private void OnGetAccountInfoOperationCompleted(object arg) {
            if ((this.GetAccountInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountInfoCompleted(this, new GetAccountInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateAccount(Person updatePerson, string oldEmail, int verification) {
            object[] results = this.Invoke("UpdateAccount", new object[] {
                        updatePerson,
                        oldEmail,
                        verification});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAccountAsync(Person updatePerson, string oldEmail, int verification) {
            this.UpdateAccountAsync(updatePerson, oldEmail, verification, null);
        }
        
        /// <remarks/>
        public void UpdateAccountAsync(Person updatePerson, string oldEmail, int verification, object userState) {
            if ((this.UpdateAccountOperationCompleted == null)) {
                this.UpdateAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAccountOperationCompleted);
            }
            this.InvokeAsync("UpdateAccount", new object[] {
                        updatePerson,
                        oldEmail,
                        verification}, this.UpdateAccountOperationCompleted, userState);
        }
        
        private void OnUpdateAccountOperationCompleted(object arg) {
            if ((this.UpdateAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAccountCompleted(this, new UpdateAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/uploadFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool uploadFile(string title, string type, long length, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data, string email, int accountID, string imagePath, string extension, int verification) {
            object[] results = this.Invoke("uploadFile", new object[] {
                        title,
                        type,
                        length,
                        data,
                        email,
                        accountID,
                        imagePath,
                        extension,
                        verification});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void uploadFileAsync(string title, string type, long length, byte[] data, string email, int accountID, string imagePath, string extension, int verification) {
            this.uploadFileAsync(title, type, length, data, email, accountID, imagePath, extension, verification, null);
        }
        
        /// <remarks/>
        public void uploadFileAsync(string title, string type, long length, byte[] data, string email, int accountID, string imagePath, string extension, int verification, object userState) {
            if ((this.uploadFileOperationCompleted == null)) {
                this.uploadFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuploadFileOperationCompleted);
            }
            this.InvokeAsync("uploadFile", new object[] {
                        title,
                        type,
                        length,
                        data,
                        email,
                        accountID,
                        imagePath,
                        extension,
                        verification}, this.uploadFileOperationCompleted, userState);
        }
        
        private void OnuploadFileOperationCompleted(object arg) {
            if ((this.uploadFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.uploadFileCompleted(this, new uploadFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getFiles", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getFiles(int accountID, int verification) {
            object[] results = this.Invoke("getFiles", new object[] {
                        accountID,
                        verification});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getFilesAsync(int accountID, int verification) {
            this.getFilesAsync(accountID, verification, null);
        }
        
        /// <remarks/>
        public void getFilesAsync(int accountID, int verification, object userState) {
            if ((this.getFilesOperationCompleted == null)) {
                this.getFilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFilesOperationCompleted);
            }
            this.InvokeAsync("getFiles", new object[] {
                        accountID,
                        verification}, this.getFilesOperationCompleted, userState);
        }
        
        private void OngetFilesOperationCompleted(object arg) {
            if ((this.getFilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFilesCompleted(this, new getFilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateFile(int fileID, string fileName, int verification) {
            this.Invoke("UpdateFile", new object[] {
                        fileID,
                        fileName,
                        verification});
        }
        
        /// <remarks/>
        public void UpdateFileAsync(int fileID, string fileName, int verification) {
            this.UpdateFileAsync(fileID, fileName, verification, null);
        }
        
        /// <remarks/>
        public void UpdateFileAsync(int fileID, string fileName, int verification, object userState) {
            if ((this.UpdateFileOperationCompleted == null)) {
                this.UpdateFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFileOperationCompleted);
            }
            this.InvokeAsync("UpdateFile", new object[] {
                        fileID,
                        fileName,
                        verification}, this.UpdateFileOperationCompleted, userState);
        }
        
        private void OnUpdateFileOperationCompleted(object arg) {
            if ((this.UpdateFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getUploadHistory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getUploadHistory(string email, System.DateTime fromDate, System.DateTime toDate, int verification) {
            object[] results = this.Invoke("getUploadHistory", new object[] {
                        email,
                        fromDate,
                        toDate,
                        verification});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getUploadHistoryAsync(string email, System.DateTime fromDate, System.DateTime toDate, int verification) {
            this.getUploadHistoryAsync(email, fromDate, toDate, verification, null);
        }
        
        /// <remarks/>
        public void getUploadHistoryAsync(string email, System.DateTime fromDate, System.DateTime toDate, int verification, object userState) {
            if ((this.getUploadHistoryOperationCompleted == null)) {
                this.getUploadHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUploadHistoryOperationCompleted);
            }
            this.InvokeAsync("getUploadHistory", new object[] {
                        email,
                        fromDate,
                        toDate,
                        verification}, this.getUploadHistoryOperationCompleted, userState);
        }
        
        private void OngetUploadHistoryOperationCompleted(object arg) {
            if ((this.getUploadHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUploadHistoryCompleted(this, new getUploadHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteFile(int fileID, int verification) {
            object[] results = this.Invoke("DeleteFile", new object[] {
                        fileID,
                        verification});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFileAsync(int fileID, int verification) {
            this.DeleteFileAsync(fileID, verification, null);
        }
        
        /// <remarks/>
        public void DeleteFileAsync(int fileID, int verification, object userState) {
            if ((this.DeleteFileOperationCompleted == null)) {
                this.DeleteFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFileOperationCompleted);
            }
            this.InvokeAsync("DeleteFile", new object[] {
                        fileID,
                        verification}, this.DeleteFileOperationCompleted, userState);
        }
        
        private void OnDeleteFileOperationCompleted(object arg) {
            if ((this.DeleteFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFileCompleted(this, new DeleteFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getFile(string email, string fileName, int verification) {
            object[] results = this.Invoke("getFile", new object[] {
                        email,
                        fileName,
                        verification});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getFileAsync(string email, string fileName, int verification) {
            this.getFileAsync(email, fileName, verification, null);
        }
        
        /// <remarks/>
        public void getFileAsync(string email, string fileName, int verification, object userState) {
            if ((this.getFileOperationCompleted == null)) {
                this.getFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFileOperationCompleted);
            }
            this.InvokeAsync("getFile", new object[] {
                        email,
                        fileName,
                        verification}, this.getFileOperationCompleted, userState);
        }
        
        private void OngetFileOperationCompleted(object arg) {
            if ((this.getFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFileCompleted(this, new getFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateStorageUsed", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updateStorageUsed(string email, long storageUsed, int verification) {
            this.Invoke("updateStorageUsed", new object[] {
                        email,
                        storageUsed,
                        verification});
        }
        
        /// <remarks/>
        public void updateStorageUsedAsync(string email, long storageUsed, int verification) {
            this.updateStorageUsedAsync(email, storageUsed, verification, null);
        }
        
        /// <remarks/>
        public void updateStorageUsedAsync(string email, long storageUsed, int verification, object userState) {
            if ((this.updateStorageUsedOperationCompleted == null)) {
                this.updateStorageUsedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateStorageUsedOperationCompleted);
            }
            this.InvokeAsync("updateStorageUsed", new object[] {
                        email,
                        storageUsed,
                        verification}, this.updateStorageUsedOperationCompleted, userState);
        }
        
        private void OnupdateStorageUsedOperationCompleted(object arg) {
            if ((this.updateStorageUsedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateStorageUsedCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getAllAccount(int verification) {
            object[] results = this.Invoke("getAllAccount", new object[] {
                        verification});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getAllAccountAsync(int verification) {
            this.getAllAccountAsync(verification, null);
        }
        
        /// <remarks/>
        public void getAllAccountAsync(int verification, object userState) {
            if ((this.getAllAccountOperationCompleted == null)) {
                this.getAllAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllAccountOperationCompleted);
            }
            this.InvokeAsync("getAllAccount", new object[] {
                        verification}, this.getAllAccountOperationCompleted, userState);
        }
        
        private void OngetAllAccountOperationCompleted(object arg) {
            if ((this.getAllAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllAccountCompleted(this, new getAllAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllAdmin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getAllAdmin(int verification) {
            object[] results = this.Invoke("getAllAdmin", new object[] {
                        verification});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getAllAdminAsync(int verification) {
            this.getAllAdminAsync(verification, null);
        }
        
        /// <remarks/>
        public void getAllAdminAsync(int verification, object userState) {
            if ((this.getAllAdminOperationCompleted == null)) {
                this.getAllAdminOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllAdminOperationCompleted);
            }
            this.InvokeAsync("getAllAdmin", new object[] {
                        verification}, this.getAllAdminOperationCompleted, userState);
        }
        
        private void OngetAllAdminOperationCompleted(object arg) {
            if ((this.getAllAdminCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllAdminCompleted(this, new getAllAdminCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateStorageCapacity", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updateStorageCapacity(int ID, int adminID, long capacity, int verification) {
            this.Invoke("updateStorageCapacity", new object[] {
                        ID,
                        adminID,
                        capacity,
                        verification});
        }
        
        /// <remarks/>
        public void updateStorageCapacityAsync(int ID, int adminID, long capacity, int verification) {
            this.updateStorageCapacityAsync(ID, adminID, capacity, verification, null);
        }
        
        /// <remarks/>
        public void updateStorageCapacityAsync(int ID, int adminID, long capacity, int verification, object userState) {
            if ((this.updateStorageCapacityOperationCompleted == null)) {
                this.updateStorageCapacityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateStorageCapacityOperationCompleted);
            }
            this.InvokeAsync("updateStorageCapacity", new object[] {
                        ID,
                        adminID,
                        capacity,
                        verification}, this.updateStorageCapacityOperationCompleted, userState);
        }
        
        private void OnupdateStorageCapacityOperationCompleted(object arg) {
            if ((this.updateStorageCapacityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateStorageCapacityCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int deleteAccount(int ID, int adminID, int verification) {
            object[] results = this.Invoke("deleteAccount", new object[] {
                        ID,
                        adminID,
                        verification});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteAccountAsync(int ID, int adminID, int verification) {
            this.deleteAccountAsync(ID, adminID, verification, null);
        }
        
        /// <remarks/>
        public void deleteAccountAsync(int ID, int adminID, int verification, object userState) {
            if ((this.deleteAccountOperationCompleted == null)) {
                this.deleteAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAccountOperationCompleted);
            }
            this.InvokeAsync("deleteAccount", new object[] {
                        ID,
                        adminID,
                        verification}, this.deleteAccountOperationCompleted, userState);
        }
        
        private void OndeleteAccountOperationCompleted(object arg) {
            if ((this.deleteAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAccountCompleted(this, new deleteAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/resetPassord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int resetPassord(int ID, int adminID, int verification) {
            object[] results = this.Invoke("resetPassord", new object[] {
                        ID,
                        adminID,
                        verification});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void resetPassordAsync(int ID, int adminID, int verification) {
            this.resetPassordAsync(ID, adminID, verification, null);
        }
        
        /// <remarks/>
        public void resetPassordAsync(int ID, int adminID, int verification, object userState) {
            if ((this.resetPassordOperationCompleted == null)) {
                this.resetPassordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnresetPassordOperationCompleted);
            }
            this.InvokeAsync("resetPassord", new object[] {
                        ID,
                        adminID,
                        verification}, this.resetPassordOperationCompleted, userState);
        }
        
        private void OnresetPassordOperationCompleted(object arg) {
            if ((this.resetPassordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.resetPassordCompleted(this, new resetPassordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFileData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetFileData(int fileID, long fileSize, int verification) {
            object[] results = this.Invoke("GetFileData", new object[] {
                        fileID,
                        fileSize,
                        verification});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFileDataAsync(int fileID, long fileSize, int verification) {
            this.GetFileDataAsync(fileID, fileSize, verification, null);
        }
        
        /// <remarks/>
        public void GetFileDataAsync(int fileID, long fileSize, int verification, object userState) {
            if ((this.GetFileDataOperationCompleted == null)) {
                this.GetFileDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileDataOperationCompleted);
            }
            this.InvokeAsync("GetFileData", new object[] {
                        fileID,
                        fileSize,
                        verification}, this.GetFileDataOperationCompleted, userState);
        }
        
        private void OnGetFileDataOperationCompleted(object arg) {
            if ((this.GetFileDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileDataCompleted(this, new GetFileDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllFileInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FileData getAllFileInfo(int fileID, int verification) {
            object[] results = this.Invoke("getAllFileInfo", new object[] {
                        fileID,
                        verification});
            return ((FileData)(results[0]));
        }
        
        /// <remarks/>
        public void getAllFileInfoAsync(int fileID, int verification) {
            this.getAllFileInfoAsync(fileID, verification, null);
        }
        
        /// <remarks/>
        public void getAllFileInfoAsync(int fileID, int verification, object userState) {
            if ((this.getAllFileInfoOperationCompleted == null)) {
                this.getAllFileInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllFileInfoOperationCompleted);
            }
            this.InvokeAsync("getAllFileInfo", new object[] {
                        fileID,
                        verification}, this.getAllFileInfoOperationCompleted, userState);
        }
        
        private void OngetAllFileInfoOperationCompleted(object arg) {
            if ((this.getAllFileInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllFileInfoCompleted(this, new getAllFileInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/activateOrDeactivate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int activateOrDeactivate(int userID, int adminID, int verification) {
            object[] results = this.Invoke("activateOrDeactivate", new object[] {
                        userID,
                        adminID,
                        verification});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void activateOrDeactivateAsync(int userID, int adminID, int verification) {
            this.activateOrDeactivateAsync(userID, adminID, verification, null);
        }
        
        /// <remarks/>
        public void activateOrDeactivateAsync(int userID, int adminID, int verification, object userState) {
            if ((this.activateOrDeactivateOperationCompleted == null)) {
                this.activateOrDeactivateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnactivateOrDeactivateOperationCompleted);
            }
            this.InvokeAsync("activateOrDeactivate", new object[] {
                        userID,
                        adminID,
                        verification}, this.activateOrDeactivateOperationCompleted, userState);
        }
        
        private void OnactivateOrDeactivateOperationCompleted(object arg) {
            if ((this.activateOrDeactivateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.activateOrDeactivateCompleted(this, new activateOrDeactivateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAdminLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getAdminLog(int adminID, int verification) {
            object[] results = this.Invoke("getAdminLog", new object[] {
                        adminID,
                        verification});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getAdminLogAsync(int adminID, int verification) {
            this.getAdminLogAsync(adminID, verification, null);
        }
        
        /// <remarks/>
        public void getAdminLogAsync(int adminID, int verification, object userState) {
            if ((this.getAdminLogOperationCompleted == null)) {
                this.getAdminLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAdminLogOperationCompleted);
            }
            this.InvokeAsync("getAdminLog", new object[] {
                        adminID,
                        verification}, this.getAdminLogOperationCompleted, userState);
        }
        
        private void OngetAdminLogOperationCompleted(object arg) {
            if ((this.getAdminLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAdminLogCompleted(this, new getAdminLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getForum", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getForum(int verification) {
            object[] results = this.Invoke("getForum", new object[] {
                        verification});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getForumAsync(int verification) {
            this.getForumAsync(verification, null);
        }
        
        /// <remarks/>
        public void getForumAsync(int verification, object userState) {
            if ((this.getForumOperationCompleted == null)) {
                this.getForumOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetForumOperationCompleted);
            }
            this.InvokeAsync("getForum", new object[] {
                        verification}, this.getForumOperationCompleted, userState);
        }
        
        private void OngetForumOperationCompleted(object arg) {
            if ((this.getForumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getForumCompleted(this, new getForumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/addQuestion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int addQuestion(string email, string question, int verification) {
            object[] results = this.Invoke("addQuestion", new object[] {
                        email,
                        question,
                        verification});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addQuestionAsync(string email, string question, int verification) {
            this.addQuestionAsync(email, question, verification, null);
        }
        
        /// <remarks/>
        public void addQuestionAsync(string email, string question, int verification, object userState) {
            if ((this.addQuestionOperationCompleted == null)) {
                this.addQuestionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddQuestionOperationCompleted);
            }
            this.InvokeAsync("addQuestion", new object[] {
                        email,
                        question,
                        verification}, this.addQuestionOperationCompleted, userState);
        }
        
        private void OnaddQuestionOperationCompleted(object arg) {
            if ((this.addQuestionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addQuestionCompleted(this, new addQuestionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/addAnswer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int addAnswer(string email, string question, int ID, int verification) {
            object[] results = this.Invoke("addAnswer", new object[] {
                        email,
                        question,
                        ID,
                        verification});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addAnswerAsync(string email, string question, int ID, int verification) {
            this.addAnswerAsync(email, question, ID, verification, null);
        }
        
        /// <remarks/>
        public void addAnswerAsync(string email, string question, int ID, int verification, object userState) {
            if ((this.addAnswerOperationCompleted == null)) {
                this.addAnswerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddAnswerOperationCompleted);
            }
            this.InvokeAsync("addAnswer", new object[] {
                        email,
                        question,
                        ID,
                        verification}, this.addAnswerOperationCompleted, userState);
        }
        
        private void OnaddAnswerOperationCompleted(object arg) {
            if ((this.addAnswerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addAnswerCompleted(this, new addAnswerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updatePassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int updatePassword(string email, string password, int verification) {
            object[] results = this.Invoke("updatePassword", new object[] {
                        email,
                        password,
                        verification});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void updatePasswordAsync(string email, string password, int verification) {
            this.updatePasswordAsync(email, password, verification, null);
        }
        
        /// <remarks/>
        public void updatePasswordAsync(string email, string password, int verification, object userState) {
            if ((this.updatePasswordOperationCompleted == null)) {
                this.updatePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdatePasswordOperationCompleted);
            }
            this.InvokeAsync("updatePassword", new object[] {
                        email,
                        password,
                        verification}, this.updatePasswordOperationCompleted, userState);
        }
        
        private void OnupdatePasswordOperationCompleted(object arg) {
            if ((this.updatePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updatePasswordCompleted(this, new updatePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Person {
        
        private string emailField;
        
        private string passwordField;
        
        private string nameField;
        
        private int accountTypeField;
        
        private long storageSpaceField;
        
        private long storageUsedField;
        
        private int accountIDField;
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int AccountType {
            get {
                return this.accountTypeField;
            }
            set {
                this.accountTypeField = value;
            }
        }
        
        /// <remarks/>
        public long StorageSpace {
            get {
                return this.storageSpaceField;
            }
            set {
                this.storageSpaceField = value;
            }
        }
        
        /// <remarks/>
        public long StorageUsed {
            get {
                return this.storageUsedField;
            }
            set {
                this.storageUsedField = value;
            }
        }
        
        /// <remarks/>
        public int AccountID {
            get {
                return this.accountIDField;
            }
            set {
                this.accountIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FileData {
        
        private int fileIDField;
        
        private string emailField;
        
        private System.DateTime timestampField;
        
        private byte[] dataField;
        
        private long lengthField;
        
        private string titleField;
        
        private string typeField;
        
        private int accountIDField;
        
        private string imagePathField;
        
        private string extensionField;
        
        /// <remarks/>
        public int FileID {
            get {
                return this.fileIDField;
            }
            set {
                this.fileIDField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
        
        /// <remarks/>
        public long Length {
            get {
                return this.lengthField;
            }
            set {
                this.lengthField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public int AccountID {
            get {
                return this.accountIDField;
            }
            set {
                this.accountIDField = value;
            }
        }
        
        /// <remarks/>
        public string ImagePath {
            get {
                return this.imagePathField;
            }
            set {
                this.imagePathField = value;
            }
        }
        
        /// <remarks/>
        public string Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void GetAccountInfoCompletedEventHandler(object sender, GetAccountInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Person Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Person)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void UpdateAccountCompletedEventHandler(object sender, UpdateAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void uploadFileCompletedEventHandler(object sender, uploadFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class uploadFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal uploadFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void getFilesCompletedEventHandler(object sender, getFilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void UpdateFileCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void getUploadHistoryCompletedEventHandler(object sender, getUploadHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUploadHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUploadHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void DeleteFileCompletedEventHandler(object sender, DeleteFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void getFileCompletedEventHandler(object sender, getFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void updateStorageUsedCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void getAllAccountCompletedEventHandler(object sender, getAllAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void getAllAdminCompletedEventHandler(object sender, getAllAdminCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllAdminCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllAdminCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void updateStorageCapacityCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void deleteAccountCompletedEventHandler(object sender, deleteAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void resetPassordCompletedEventHandler(object sender, resetPassordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class resetPassordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal resetPassordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void GetFileDataCompletedEventHandler(object sender, GetFileDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void getAllFileInfoCompletedEventHandler(object sender, getAllFileInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllFileInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllFileInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FileData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FileData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void activateOrDeactivateCompletedEventHandler(object sender, activateOrDeactivateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class activateOrDeactivateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal activateOrDeactivateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void getAdminLogCompletedEventHandler(object sender, getAdminLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAdminLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAdminLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void getForumCompletedEventHandler(object sender, getForumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getForumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getForumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void addQuestionCompletedEventHandler(object sender, addQuestionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addQuestionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addQuestionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void addAnswerCompletedEventHandler(object sender, addAnswerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addAnswerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addAnswerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void updatePasswordCompletedEventHandler(object sender, updatePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updatePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updatePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591